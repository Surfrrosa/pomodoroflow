name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json

    - name: Install dependencies
      working-directory: mobile-app
      run: npm ci

    - name: Run TypeScript checks
      working-directory: mobile-app
      run: npm run typecheck

    - name: Run linter
      working-directory: mobile-app
      run: npm run lint

    - name: Run tests
      working-directory: mobile-app
      run: npm test -- --coverage --passWithNoTests

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        directory: mobile-app/coverage
        fail_ci_if_error: false

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json

    - name: Setup Expo CLI
      run: npm install -g @expo/cli

    - name: Install dependencies
      working-directory: mobile-app
      run: npm ci

    - name: Build preview
      working-directory: mobile-app
      run: npx expo export --platform all

  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile-app/package-lock.json

    - name: Setup Expo CLI
      run: npm install -g @expo/cli eas-cli

    - name: Install dependencies
      working-directory: mobile-app
      run: npm ci

    - name: Build for app stores
      working-directory: mobile-app
      run: |
        eas build --platform all --non-interactive --wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}